---
import Layout from "@components/layout.astro";
import CodeTabs from "@components/code-tabs.astro";
import { injectCode } from "@src/utils/blog-utils";
---

<Layout>
	<div class="prose max-w-container mx-auto px-4">
		<h1>CodeTabs is Custom Component for Code Snippets</h1>

		<CodeTabs
			tabs={{
				markdown: injectCode(`
                    ---
                    | props      |  type       | default  | required | description | 
                    |------------|-------------|----------|----------|-------------|
                    | tabs       |  object     |          | true     | Code snippets to display in tabs |
                    | componentId|  string     |          | false    | Unique ID for the component |
                    ---
                    `),
			}}
		/>
		<CodeTabs
			tabs={{
				markdown: injectCode(`
                    from PIL import Image
                        import random

                        # Load the image
                        input_path = "storage/cwk_banner.jpg"
                        output_path = "glitched_image.png"
                        image = Image.open(input_path)
                        pixels = image.load()

                        # Create a new image for output
                        width, height = image.size
                        output_image = Image.new("RGB", (width, height))
                        output_pixels = output_image.load()


                        def make_glitch_effect(delta=0):
                            for y in range(height):
                                delta_x = random.randint(-delta, delta)

                                for x in range(width):
                                    source_x = (x - delta_x) % width
                                    output_pixels[x, y] = pixels[source_x, y]


                        if __name__ == "__main__":
                            # This effect is inspired by newboston youtube banner

                            make_glitch_effect(10)
                            output_image.save(output_path)
                            output_image.show()

            `),
			}}
		/>

		<CodeTabs
			tabs={{
				'cpp': injectCode(`
                    from collections import Counter
                    import heapq

                    def topKFrequent(nums, k): # Count frequencies
                        count = Counter(nums)

                        # Keep k most frequent elements using min-heap
                        heap = []
                        for num, freq in count.items():
                            heapq.heappush(heap, (freq, num))
                            if len(heap) > k:
                                heapq.heappop(heap)

                        # Extract results
                        return [num for freq, num in heap]
                `),
			}}
		/>
	</div>
</Layout>
